{"version":3,"sources":["components/LandingPage/index.module.css","static/YosemitePoster.png","static/WinggoTse_Resume.pdf","static/Yosemite.mp4","components/Navbar/index.js","components/LandingPage/index.js","App.js","serviceWorker.js","index.js","components/scrollToTop.js"],"names":["module","exports","Header","Navbar","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","className","Item","active","href","resume","target","LandingPage","styles","page","poster","videoClass","video","Source","src","vid","type","id","main","WorkPage","React","lazy","AboutPage","PhotographyPage","PortfolioPage","App","Status","Spinner","animation","variant","Container","exact","path","render","fallback","Boolean","window","location","hostname","match","ReactDOM","pathname","useLocation","useEffect","scrollTo","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,mBCD3DD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,wOC2C5BC,EArCA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,OAAO,OACvB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KACvB,0CAGJ,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIL,KAAL,CAAUD,GAAIC,IAAMC,GAAG,SACnB,qCAGR,kBAACI,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIL,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UACnB,sCAIR,kBAACI,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIL,KAAL,CAAUD,GAAIC,IAAMC,GAAG,gBACnB,2CAGR,kBAACI,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIL,KAAL,CAAUQ,QAAQ,EAAOC,KAAMC,IAAQC,OAAO,UAC1C,iD,4ECLbC,EAtBK,WAChB,OACI,yBAAKN,UAAWO,IAAOC,MACnB,kBAAC,IAAD,CAASC,OAAQA,IAAQC,WAAYH,IAAOI,OACxC,kBAAC,IAAQC,OAAT,CAAgBC,IAAKC,IAAKC,KAAK,eAGnC,kBAAC,IAAD,KACI,yBAAKC,GAAIT,IAAOU,MACZ,0CAGA,6BACA,gECZdC,EAAWC,IAAMC,MAAK,kBAAM,iCAC5BC,EAAYF,IAAMC,MAAK,kBAAM,iCAC7BE,EAAkBH,IAAMC,MAAK,kBAAM,uDACnCG,EAAgBJ,IAAMC,MAAK,kBAAM,iCAgDxBI,MA9Cf,WACC,IAAMC,EAAS,kBAACC,EAAA,EAAD,CAAS1B,UAAU,UAAU2B,UAAU,OAAOC,QAAQ,cAErE,OACC,yBAAK5B,UAAU,OACd,kBAAC6B,EAAA,EAAD,KACC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACjB,kBAAC,EAAD,OAGD,kBAAC,IAAD,CACCA,KAAK,kBACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUC,SAAUR,GACjC,kBAACF,EAAD,UAIF,kBAAC,IAAD,CACCQ,KAAK,QACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUC,SAAUR,GACjC,kBAACP,EAAD,UAIF,kBAAC,IAAD,CACCa,KAAK,SACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUC,SAAUR,GACjC,kBAACJ,EAAD,UAIF,kBAAC,IAAD,CACCU,KAAK,eACLC,OAAQ,kBAAM,kBAAC,WAAD,CAAUC,SAAUR,GACjC,kBAACH,EAAD,cCrCaY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASP,OAAO,kBAAC,IAAD,KAAe,mBCLhB,WAAwB,IAC3BQ,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACNP,OAAOQ,SAAS,EAAG,KACpB,CAACH,IAEG,ODFoB,MAAe,kBAAC,EAAD,OAAyBI,SAASC,eAAe,SD2HzF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b7c2cd79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LandingPage_main__2342p\",\"video\":\"LandingPage_video__3Njy4\"};","module.exports = __webpack_public_path__ + \"static/media/YosemitePoster.12c56509.png\";","module.exports = __webpack_public_path__ + \"static/media/WinggoTse_Resume.5fe5f77a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Yosemite.43944fdb.mp4\";","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport resume from '../../static/WinggoTse_Resume.pdf';\r\n// import styles from './index.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Navbar expand='md' sticky='top'>\r\n            <Navbar.Brand as={Link} to='/'>\r\n                <b>Winggo Tse</b>\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse>\r\n                <Nav className='mr-auto'>\r\n                    <Nav.Item>\r\n                        <Nav.Link as={Link} to='/work'>\r\n                            <b>Work</b>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link as={Link} to='/about'>\r\n                            <b>About</b>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item>\r\n                        <Nav.Link as={Link} to='/photography'>\r\n                            <b>Photograhy</b>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link active={false} href={resume} target='_blank'>\r\n                            <b>Résumé</b>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './index.module.css';\r\nimport Fade from 'react-reveal/Fade';\r\nimport VideoBg from 'reactjs-videobg';\r\nimport vid from '../../static/Yosemite.mp4';\r\nimport poster from '../../static/YosemitePoster.png';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div className={styles.page}>\r\n            <VideoBg poster={poster} videoClass={styles.video}>\r\n                <VideoBg.Source src={vid} type='video/mp4' />\r\n            </VideoBg>\r\n\r\n            <Fade>\r\n                <div id={styles.main}>\r\n                    <h1>\r\n                        Winggo Tse\r\n                    </h1>\r\n                    <hr></hr>\r\n                    <h5>\r\n                        Software Engineer + Creative\r\n                    </h5>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React, { Suspense } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Container, Spinner } from 'react-bootstrap';\n\nimport Header from './components/Navbar';\nimport LandingPage from './components/LandingPage';\n\nconst WorkPage = React.lazy(() => import('./components/WorkPage'));\nconst AboutPage = React.lazy(() => import('./components/AboutPage'));\nconst PhotographyPage = React.lazy(() => import('./components/PhotographyPage'));\nconst PortfolioPage = React.lazy(() => import('./components/WorkPage/portfolio'));\n\nfunction App() {\n\tconst Status = <Spinner className='spinner' animation='grow' variant='secondary' />;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath='/work/portfolio' \n\t\t\t\t\t\trender={() => <Suspense fallback={Status}>\n\t\t\t\t\t\t\t<PortfolioPage />\n\t\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath='/work'\n\t\t\t\t\t\trender={() => <Suspense fallback={Status}>\n\t\t\t\t\t\t\t<WorkPage />\n\t\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath='/about'\n\t\t\t\t\t\trender={() => <Suspense fallback={Status}>\n\t\t\t\t\t\t\t<AboutPage />\n\t\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath='/photography'\n\t\t\t\t\t\trender={() => <Suspense fallback={Status}>\n\t\t\t\t\t\t\t<PhotographyPage />\n\t\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/scrollToTop';\n\nReactDOM.render(<BrowserRouter><ScrollToTop /><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}"],"sourceRoot":""}